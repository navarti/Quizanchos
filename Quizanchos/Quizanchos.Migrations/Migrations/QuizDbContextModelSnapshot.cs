// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quizanchos.Domain;

#nullable disable

namespace Quizanchos.Migrations.Migrations
{
    [DbContext(typeof(QuizDbContext))]
    partial class QuizDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Quizanchos.Domain.Entities.Abstractions.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("QuizCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuizEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuizCategoryId");

                    b.HasIndex("QuizEntityId");

                    b.ToTable("Feature");

                    b.HasDiscriminator().HasValue("Feature");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Quizanchos.Domain.Entities.QuizCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuizCategories");
                });

            modelBuilder.Entity("Quizanchos.Domain.Entities.QuizEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuizEntities");
                });

            modelBuilder.Entity("Quizanchos.Domain.Entities.Features.FeatureFloat", b =>
                {
                    b.HasBaseType("Quizanchos.Domain.Entities.Abstractions.Feature");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue("FeatureFloat");
                });

            modelBuilder.Entity("Quizanchos.Domain.Entities.Features.FeatureInt", b =>
                {
                    b.HasBaseType("Quizanchos.Domain.Entities.Abstractions.Feature");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.ToTable("Feature", t =>
                        {
                            t.Property("Value")
                                .HasColumnName("FeatureInt_Value");
                        });

                    b.HasDiscriminator().HasValue("FeatureInt");
                });

            modelBuilder.Entity("Quizanchos.Domain.Entities.Abstractions.Feature", b =>
                {
                    b.HasOne("Quizanchos.Domain.Entities.QuizCategory", "QuizCategory")
                        .WithMany()
                        .HasForeignKey("QuizCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quizanchos.Domain.Entities.QuizEntity", "QuizEntity")
                        .WithMany()
                        .HasForeignKey("QuizEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuizCategory");

                    b.Navigation("QuizEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
